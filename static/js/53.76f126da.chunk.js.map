{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/css/workerManager.js","../node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/css/cssMode.js"],"names":["Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textDocumentEdit","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","getModels","d","resource","worker","doValidation","markers","map","diag","toSeverity","startLineNumber","startColumn","endLineNumber","endColumn","toDiagnostics","getModel","err","console","error","lsSeverity","MarkerSeverity","Info","fromPosition","column","lineNumber","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","context","token","getWordUntilPosition","doComplete","info","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","toMarkdownString","thing","toMarkedStringArray","HoverAdapter","provideHover","doHover","toDocumentHighlightKind","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","entries","toLocation","parse","DefinitionAdapter","provideDefinition","findDefinition","definition","ReferenceAdapter","provideReferences","findReferences","RenameAdapter","provideRenameEdits","newName","doRename","resourceEdits","_a","toWorkspaceEdit","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","fromRange","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","Comment","Imports","Region","toFoldingRangeKind","setupMode","first","more","apply","concat","registerCompletionItemProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerRenameProvider","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"static/js/53.76f126da.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\n\nvar WorkerManager =\n/** @class */\nfunction () {\n  function WorkerManager(defaults) {\n    var _this = this;\n\n    this._defaults = defaults;\n    this._worker = null;\n    this._idleCheckInterval = setInterval(function () {\n      return _this._checkIfIdle();\n    }, 30 * 1000);\n    this._lastUsedTime = 0;\n    this._configChangeListener = this._defaults.onDidChange(function () {\n      return _this._stopWorker();\n    });\n  }\n\n  WorkerManager.prototype._stopWorker = function () {\n    if (this._worker) {\n      this._worker.dispose();\n\n      this._worker = null;\n    }\n\n    this._client = null;\n  };\n\n  WorkerManager.prototype.dispose = function () {\n    clearInterval(this._idleCheckInterval);\n\n    this._configChangeListener.dispose();\n\n    this._stopWorker();\n  };\n\n  WorkerManager.prototype._checkIfIdle = function () {\n    if (!this._worker) {\n      return;\n    }\n\n    var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      this._stopWorker();\n    }\n  };\n\n  WorkerManager.prototype._getClient = function () {\n    this._lastUsedTime = Date.now();\n\n    if (!this._client) {\n      this._worker = monaco.editor.createWebWorker({\n        // module that exports the create() method and returns a `CSSWorker` instance\n        moduleId: 'vs/language/css/cssWorker',\n        label: this._defaults.languageId,\n        // passed in to the create() method\n        createData: {\n          languageSettings: this._defaults.diagnosticsOptions,\n          languageId: this._defaults.languageId\n        }\n      });\n      this._client = this._worker.getProxy();\n    }\n\n    return this._client;\n  };\n\n  WorkerManager.prototype.getLanguageServiceWorker = function () {\n    var _this = this;\n\n    var resources = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      resources[_i] = arguments[_i];\n    }\n\n    var _client;\n\n    return this._getClient().then(function (client) {\n      _client = client;\n    }).then(function (_) {\n      return _this._worker.withSyncedResources(resources);\n    }).then(function (_) {\n      return _client;\n    });\n  };\n\n  return WorkerManager;\n}();\n\nexport { WorkerManager };","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\n\nexport var Position;\n\n(function (Position) {\n  /**\r\n   * Creates a new Position literal from the given line and character.\r\n   * @param line The position's line.\r\n   * @param character The position's character.\r\n   */\n  function create(line, character) {\n    return {\n      line: line,\n      character: character\n    };\n  }\n\n  Position.create = create;\n  /**\r\n   * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n  }\n\n  Position.is = is;\n})(Position || (Position = {}));\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\n\n\nexport var Range;\n\n(function (Range) {\n  function create(one, two, three, four) {\n    if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n      return {\n        start: Position.create(one, two),\n        end: Position.create(three, four)\n      };\n    } else if (Position.is(one) && Position.is(two)) {\n      return {\n        start: one,\n        end: two\n      };\n    } else {\n      throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n    }\n  }\n\n  Range.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n\n  Range.is = is;\n})(Range || (Range = {}));\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\n\n\nexport var Location;\n\n(function (Location) {\n  /**\r\n   * Creates a Location literal.\r\n   * @param uri The location's uri.\r\n   * @param range The location's range.\r\n   */\n  function create(uri, range) {\n    return {\n      uri: uri,\n      range: range\n    };\n  }\n\n  Location.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n\n  Location.is = is;\n})(Location || (Location = {}));\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\n\n\nexport var Color;\n\n(function (Color) {\n  /**\r\n   * Creates a new Color literal.\r\n   */\n  function create(red, green, blue, alpha) {\n    return {\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha\n    };\n  }\n\n  Color.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.red) && Is.number(candidate.green) && Is.number(candidate.blue) && Is.number(candidate.alpha);\n  }\n\n  Color.is = is;\n})(Color || (Color = {}));\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\n\n\nexport var ColorInformation;\n\n(function (ColorInformation) {\n  /**\r\n   * Creates a new ColorInformation literal.\r\n   */\n  function create(range, color) {\n    return {\n      range: range,\n      color: color\n    };\n  }\n\n  ColorInformation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Range.is(candidate.range) && Color.is(candidate.color);\n  }\n\n  ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\n\n\nexport var ColorPresentation;\n\n(function (ColorPresentation) {\n  /**\r\n   * Creates a new ColorInformation literal.\r\n   */\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label: label,\n      textEdit: textEdit,\n      additionalTextEdits: additionalTextEdits\n    };\n  }\n\n  ColorPresentation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n\n  ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\r\n * Enum of known range kinds\r\n */\n\n\nexport var FoldingRangeKind;\n\n(function (FoldingRangeKind) {\n  /**\r\n   * Folding range for a comment\r\n   */\n  FoldingRangeKind[\"Comment\"] = \"comment\";\n  /**\r\n   * Folding range for a imports or includes\r\n   */\n\n  FoldingRangeKind[\"Imports\"] = \"imports\";\n  /**\r\n   * Folding range for a region (e.g. `#region`)\r\n   */\n\n  FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\n\n\nexport var FoldingRange;\n\n(function (FoldingRange) {\n  /**\r\n   * Creates a new FoldingRange literal.\r\n   */\n  function create(startLine, endLine, startCharacter, endCharacter, kind) {\n    var result = {\n      startLine: startLine,\n      endLine: endLine\n    };\n\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  FoldingRange.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.startLine) && Is.number(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n\n  FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\n\n\nexport var DiagnosticRelatedInformation;\n\n(function (DiagnosticRelatedInformation) {\n  /**\r\n   * Creates a new DiagnosticRelatedInformation literal.\r\n   */\n  function create(location, message) {\n    return {\n      location: location,\n      message: message\n    };\n  }\n\n  DiagnosticRelatedInformation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n\n  DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\r\n * The diagnostic's severity.\r\n */\n\n\nexport var DiagnosticSeverity;\n\n(function (DiagnosticSeverity) {\n  /**\r\n   * Reports an error.\r\n   */\n  DiagnosticSeverity.Error = 1;\n  /**\r\n   * Reports a warning.\r\n   */\n\n  DiagnosticSeverity.Warning = 2;\n  /**\r\n   * Reports an information.\r\n   */\n\n  DiagnosticSeverity.Information = 3;\n  /**\r\n   * Reports a hint.\r\n   */\n\n  DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\n\n\nexport var Diagnostic;\n\n(function (Diagnostic) {\n  /**\r\n   * Creates a new Diagnostic literal.\r\n   */\n  function create(range, message, severity, code, source, relatedInformation) {\n    var result = {\n      range: range,\n      message: message\n    };\n\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n\n    return result;\n  }\n\n  Diagnostic.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n\n  Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\n\n\nexport var Command;\n\n(function (Command) {\n  /**\r\n   * Creates a new Command literal.\r\n   */\n  function create(title, command) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      title: title,\n      command: command\n    };\n\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n\n    return result;\n  }\n\n  Command.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n\n  Command.is = is;\n})(Command || (Command = {}));\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\n\n\nexport var TextEdit;\n\n(function (TextEdit) {\n  /**\r\n   * Creates a replace text edit.\r\n   * @param range The range of text to be replaced.\r\n   * @param newText The new text.\r\n   */\n  function replace(range, newText) {\n    return {\n      range: range,\n      newText: newText\n    };\n  }\n\n  TextEdit.replace = replace;\n  /**\r\n   * Creates a insert text edit.\r\n   * @param position The position to insert the text at.\r\n   * @param newText The text to be inserted.\r\n   */\n\n  function insert(position, newText) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText: newText\n    };\n  }\n\n  TextEdit.insert = insert;\n  /**\r\n   * Creates a delete text edit.\r\n   * @param range The range of text to be deleted.\r\n   */\n\n  function del(range) {\n    return {\n      range: range,\n      newText: ''\n    };\n  }\n\n  TextEdit.del = del;\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n\n  TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\n\n\nexport var TextDocumentEdit;\n\n(function (TextDocumentEdit) {\n  /**\r\n   * Creates a new `TextDocumentEdit`\r\n   */\n  function create(textDocument, edits) {\n    return {\n      textDocument: textDocument,\n      edits: edits\n    };\n  }\n\n  TextDocumentEdit.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && VersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n\n  TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\n\nexport var WorkspaceEdit;\n\n(function (WorkspaceEdit) {\n  function is(value) {\n    var candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\n  }\n\n  WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\n\nvar TextEditChangeImpl =\n/** @class */\nfunction () {\n  function TextEditChangeImpl(edits) {\n    this.edits = edits;\n  }\n\n  TextEditChangeImpl.prototype.insert = function (position, newText) {\n    this.edits.push(TextEdit.insert(position, newText));\n  };\n\n  TextEditChangeImpl.prototype.replace = function (range, newText) {\n    this.edits.push(TextEdit.replace(range, newText));\n  };\n\n  TextEditChangeImpl.prototype.delete = function (range) {\n    this.edits.push(TextEdit.del(range));\n  };\n\n  TextEditChangeImpl.prototype.add = function (edit) {\n    this.edits.push(edit);\n  };\n\n  TextEditChangeImpl.prototype.all = function () {\n    return this.edits;\n  };\n\n  TextEditChangeImpl.prototype.clear = function () {\n    this.edits.splice(0, this.edits.length);\n  };\n\n  return TextEditChangeImpl;\n}();\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\n\n\nvar WorkspaceChange =\n/** @class */\nfunction () {\n  function WorkspaceChange(workspaceEdit) {\n    var _this = this;\n\n    this._textEditChanges = Object.create(null);\n\n    if (workspaceEdit) {\n      this._workspaceEdit = workspaceEdit;\n\n      if (workspaceEdit.documentChanges) {\n        workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n          var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n          _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n        });\n      } else if (workspaceEdit.changes) {\n        Object.keys(workspaceEdit.changes).forEach(function (key) {\n          var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n          _this._textEditChanges[key] = textEditChange;\n        });\n      }\n    }\n  }\n\n  Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n    /**\r\n     * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n     * use to be returned from a workspace edit operation like rename.\r\n     */\n    get: function get() {\n      return this._workspaceEdit;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  WorkspaceChange.prototype.getTextEditChange = function (key) {\n    if (VersionedTextDocumentIdentifier.is(key)) {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          documentChanges: []\n        };\n      }\n\n      if (!this._workspaceEdit.documentChanges) {\n        throw new Error('Workspace edit is not configured for versioned document changes.');\n      }\n\n      var textDocument = key;\n      var result = this._textEditChanges[textDocument.uri];\n\n      if (!result) {\n        var edits = [];\n        var textDocumentEdit = {\n          textDocument: textDocument,\n          edits: edits\n        };\n\n        this._workspaceEdit.documentChanges.push(textDocumentEdit);\n\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[textDocument.uri] = result;\n      }\n\n      return result;\n    } else {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          changes: Object.create(null)\n        };\n      }\n\n      if (!this._workspaceEdit.changes) {\n        throw new Error('Workspace edit is not configured for normal text edit changes.');\n      }\n\n      var result = this._textEditChanges[key];\n\n      if (!result) {\n        var edits = [];\n        this._workspaceEdit.changes[key] = edits;\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[key] = result;\n      }\n\n      return result;\n    }\n  };\n\n  return WorkspaceChange;\n}();\n\nexport { WorkspaceChange };\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\n\nexport var TextDocumentIdentifier;\n\n(function (TextDocumentIdentifier) {\n  /**\r\n   * Creates a new TextDocumentIdentifier literal.\r\n   * @param uri The document's uri.\r\n   */\n  function create(uri) {\n    return {\n      uri: uri\n    };\n  }\n\n  TextDocumentIdentifier.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n\n  TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\n\n\nexport var VersionedTextDocumentIdentifier;\n\n(function (VersionedTextDocumentIdentifier) {\n  /**\r\n   * Creates a new VersionedTextDocumentIdentifier literal.\r\n   * @param uri The document's uri.\r\n   * @param uri The document's text.\r\n   */\n  function create(uri, version) {\n    return {\n      uri: uri,\n      version: version\n    };\n  }\n\n  VersionedTextDocumentIdentifier.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n  }\n\n  VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\n\n\nexport var TextDocumentItem;\n\n(function (TextDocumentItem) {\n  /**\r\n   * Creates a new TextDocumentItem literal.\r\n   * @param uri The document's uri.\r\n   * @param languageId The document's language identifier.\r\n   * @param version The document's version number.\r\n   * @param text The document's text.\r\n   */\n  function create(uri, languageId, version, text) {\n    return {\n      uri: uri,\n      languageId: languageId,\n      version: version,\n      text: text\n    };\n  }\n\n  TextDocumentItem.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n  }\n\n  TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\n\n\nexport var MarkupKind;\n\n(function (MarkupKind) {\n  /**\r\n   * Plain text is supported as a content format\r\n   */\n  MarkupKind.PlainText = 'plaintext';\n  /**\r\n   * Markdown is supported as a content format\r\n   */\n\n  MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n\n(function (MarkupKind) {\n  /**\r\n   * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n  }\n\n  MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\n\nexport var MarkupContent;\n\n(function (MarkupContent) {\n  /**\r\n   * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n\n  MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\r\n * The kind of a completion entry.\r\n */\n\n\nexport var CompletionItemKind;\n\n(function (CompletionItemKind) {\n  CompletionItemKind.Text = 1;\n  CompletionItemKind.Method = 2;\n  CompletionItemKind.Function = 3;\n  CompletionItemKind.Constructor = 4;\n  CompletionItemKind.Field = 5;\n  CompletionItemKind.Variable = 6;\n  CompletionItemKind.Class = 7;\n  CompletionItemKind.Interface = 8;\n  CompletionItemKind.Module = 9;\n  CompletionItemKind.Property = 10;\n  CompletionItemKind.Unit = 11;\n  CompletionItemKind.Value = 12;\n  CompletionItemKind.Enum = 13;\n  CompletionItemKind.Keyword = 14;\n  CompletionItemKind.Snippet = 15;\n  CompletionItemKind.Color = 16;\n  CompletionItemKind.File = 17;\n  CompletionItemKind.Reference = 18;\n  CompletionItemKind.Folder = 19;\n  CompletionItemKind.EnumMember = 20;\n  CompletionItemKind.Constant = 21;\n  CompletionItemKind.Struct = 22;\n  CompletionItemKind.Event = 23;\n  CompletionItemKind.Operator = 24;\n  CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\n\n\nexport var InsertTextFormat;\n\n(function (InsertTextFormat) {\n  /**\r\n   * The primary text to be inserted is treated as a plain string.\r\n   */\n  InsertTextFormat.PlainText = 1;\n  /**\r\n   * The primary text to be inserted is treated as a snippet.\r\n   *\r\n   * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n   * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n   * the end of the snippet. Placeholders with equal identifiers are linked,\r\n   * that is typing in one will update others too.\r\n   *\r\n   * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n   */\n\n  InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\n\n\nexport var CompletionItem;\n\n(function (CompletionItem) {\n  /**\r\n   * Create a completion item and seed it with a label.\r\n   * @param label The completion item's label\r\n   */\n  function create(label) {\n    return {\n      label: label\n    };\n  }\n\n  CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\n\n\nexport var CompletionList;\n\n(function (CompletionList) {\n  /**\r\n   * Creates a new completion list.\r\n   *\r\n   * @param items The completion items.\r\n   * @param isIncomplete The list is not complete.\r\n   */\n  function create(items, isIncomplete) {\n    return {\n      items: items ? items : [],\n      isIncomplete: !!isIncomplete\n    };\n  }\n\n  CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\n\nexport var MarkedString;\n\n(function (MarkedString) {\n  /**\r\n   * Creates a marked string from plain text.\r\n   *\r\n   * @param plainText The plain text.\r\n   */\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n  }\n\n  MarkedString.fromPlainText = fromPlainText;\n  /**\r\n   * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n\n  MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\n\nexport var Hover;\n\n(function (Hover) {\n  /**\r\n   * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n\n  Hover.is = is;\n})(Hover || (Hover = {}));\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\n\n\nexport var ParameterInformation;\n\n(function (ParameterInformation) {\n  /**\r\n   * Creates a new parameter information literal.\r\n   *\r\n   * @param label A label string.\r\n   * @param documentation A doc string.\r\n   */\n  function create(label, documentation) {\n    return documentation ? {\n      label: label,\n      documentation: documentation\n    } : {\n      label: label\n    };\n  }\n\n  ParameterInformation.create = create;\n  ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\n\n\nexport var SignatureInformation;\n\n(function (SignatureInformation) {\n  function create(label, documentation) {\n    var parameters = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      parameters[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      label: label\n    };\n\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n\n    return result;\n  }\n\n  SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\r\n * A document highlight kind.\r\n */\n\n\nexport var DocumentHighlightKind;\n\n(function (DocumentHighlightKind) {\n  /**\r\n   * A textual occurrence.\r\n   */\n  DocumentHighlightKind.Text = 1;\n  /**\r\n   * Read-access of a symbol, like reading a variable.\r\n   */\n\n  DocumentHighlightKind.Read = 2;\n  /**\r\n   * Write-access of a symbol, like writing to a variable.\r\n   */\n\n  DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\n\n\nexport var DocumentHighlight;\n\n(function (DocumentHighlight) {\n  /**\r\n   * Create a DocumentHighlight object.\r\n   * @param range The range the highlight applies to.\r\n   */\n  function create(range, kind) {\n    var result = {\n      range: range\n    };\n\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\r\n * A symbol kind.\r\n */\n\n\nexport var SymbolKind;\n\n(function (SymbolKind) {\n  SymbolKind.File = 1;\n  SymbolKind.Module = 2;\n  SymbolKind.Namespace = 3;\n  SymbolKind.Package = 4;\n  SymbolKind.Class = 5;\n  SymbolKind.Method = 6;\n  SymbolKind.Property = 7;\n  SymbolKind.Field = 8;\n  SymbolKind.Constructor = 9;\n  SymbolKind.Enum = 10;\n  SymbolKind.Interface = 11;\n  SymbolKind.Function = 12;\n  SymbolKind.Variable = 13;\n  SymbolKind.Constant = 14;\n  SymbolKind.String = 15;\n  SymbolKind.Number = 16;\n  SymbolKind.Boolean = 17;\n  SymbolKind.Array = 18;\n  SymbolKind.Object = 19;\n  SymbolKind.Key = 20;\n  SymbolKind.Null = 21;\n  SymbolKind.EnumMember = 22;\n  SymbolKind.Struct = 23;\n  SymbolKind.Event = 24;\n  SymbolKind.Operator = 25;\n  SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n\nexport var SymbolInformation;\n\n(function (SymbolInformation) {\n  /**\r\n   * Creates a new symbol information literal.\r\n   *\r\n   * @param name The name of the symbol.\r\n   * @param kind The kind of the symbol.\r\n   * @param range The range of the location of the symbol.\r\n   * @param uri The resource of the location of symbol, defaults to the current document.\r\n   * @param containerName The name of the symbol containing the symbol.\r\n   */\n  function create(name, kind, range, uri, containerName) {\n    var result = {\n      name: name,\n      kind: kind,\n      location: {\n        uri: uri,\n        range: range\n      }\n    };\n\n    if (containerName) {\n      result.containerName = containerName;\n    }\n\n    return result;\n  }\n\n  SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\n\n\nvar DocumentSymbol =\n/** @class */\nfunction () {\n  function DocumentSymbol() {}\n\n  return DocumentSymbol;\n}();\n\nexport { DocumentSymbol };\n\n(function (DocumentSymbol) {\n  /**\r\n   * Creates a new symbol information literal.\r\n   *\r\n   * @param name The name of the symbol.\r\n   * @param detail The detail of the symbol.\r\n   * @param kind The kind of the symbol.\r\n   * @param range The range of the symbol.\r\n   * @param selectionRange The selectionRange of the symbol.\r\n   * @param children Children of the symbol.\r\n   */\n  function create(name, detail, kind, range, selectionRange, children) {\n    var result = {\n      name: name,\n      detail: detail,\n      kind: kind,\n      range: range,\n      selectionRange: selectionRange\n    };\n\n    if (children !== void 0) {\n      result.children = children;\n    }\n\n    return result;\n  }\n\n  DocumentSymbol.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children));\n  }\n\n  DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\r\n * A set of predefined code action kinds\r\n */\n\n\nexport var CodeActionKind;\n\n(function (CodeActionKind) {\n  /**\r\n   * Base kind for quickfix actions: 'quickfix'\r\n   */\n  CodeActionKind.QuickFix = 'quickfix';\n  /**\r\n   * Base kind for refactoring actions: 'refactor'\r\n   */\n\n  CodeActionKind.Refactor = 'refactor';\n  /**\r\n   * Base kind for refactoring extraction actions: 'refactor.extract'\r\n   *\r\n   * Example extract actions:\r\n   *\r\n   * - Extract method\r\n   * - Extract function\r\n   * - Extract variable\r\n   * - Extract interface from class\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorExtract = 'refactor.extract';\n  /**\r\n   * Base kind for refactoring inline actions: 'refactor.inline'\r\n   *\r\n   * Example inline actions:\r\n   *\r\n   * - Inline function\r\n   * - Inline variable\r\n   * - Inline constant\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorInline = 'refactor.inline';\n  /**\r\n   * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n   *\r\n   * Example rewrite actions:\r\n   *\r\n   * - Convert JavaScript function to class\r\n   * - Add or remove parameter\r\n   * - Encapsulate field\r\n   * - Make method static\r\n   * - Move method to base class\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n  /**\r\n   * Base kind for source actions: `source`\r\n   *\r\n   * Source code actions apply to the entire file.\r\n   */\n\n  CodeActionKind.Source = 'source';\n  /**\r\n   * Base kind for an organize imports source action: `source.organizeImports`\r\n   */\n\n  CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\n\n\nexport var CodeActionContext;\n\n(function (CodeActionContext) {\n  /**\r\n   * Creates a new CodeActionContext literal.\r\n   */\n  function create(diagnostics, only) {\n    var result = {\n      diagnostics: diagnostics\n    };\n\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n\n    return result;\n  }\n\n  CodeActionContext.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n  }\n\n  CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n\nexport var CodeAction;\n\n(function (CodeAction) {\n  function create(title, commandOrEdit, kind) {\n    var result = {\n      title: title\n    };\n\n    if (Command.is(commandOrEdit)) {\n      result.command = commandOrEdit;\n    } else {\n      result.edit = commandOrEdit;\n    }\n\n    if (kind !== void null) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  CodeAction.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n\n  CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\n\n\nexport var CodeLens;\n\n(function (CodeLens) {\n  /**\r\n   * Creates a new CodeLens literal.\r\n   */\n  function create(range, data) {\n    var result = {\n      range: range\n    };\n    if (Is.defined(data)) result.data = data;\n    return result;\n  }\n\n  CodeLens.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n\n  CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\n\n\nexport var FormattingOptions;\n\n(function (FormattingOptions) {\n  /**\r\n   * Creates a new FormattingOptions literal.\r\n   */\n  function create(tabSize, insertSpaces) {\n    return {\n      tabSize: tabSize,\n      insertSpaces: insertSpaces\n    };\n  }\n\n  FormattingOptions.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n\n  FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\n\n\nvar DocumentLink =\n/** @class */\nfunction () {\n  function DocumentLink() {}\n\n  return DocumentLink;\n}();\n\nexport { DocumentLink };\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\n\n(function (DocumentLink) {\n  /**\r\n   * Creates a new DocumentLink literal.\r\n   */\n  function create(range, target, data) {\n    return {\n      range: range,\n      target: target,\n      data: data\n    };\n  }\n\n  DocumentLink.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n\n  DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n\n(function (TextDocument) {\n  /**\r\n   * Creates a new ITextDocument literal from the given uri and content.\r\n   * @param uri The document's uri.\r\n   * @param languageId  The document's language Id.\r\n   * @param content The document's content.\r\n   */\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n\n  TextDocument.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n\n  TextDocument.is = is;\n\n  function applyEdits(document, edits) {\n    var text = document.getText();\n    var sortedEdits = mergeSort(edits, function (a, b) {\n      var diff = a.range.start.line - b.range.start.line;\n\n      if (diff === 0) {\n        return a.range.start.character - b.range.start.character;\n      }\n\n      return diff;\n    });\n    var lastModifiedOffset = text.length;\n\n    for (var i = sortedEdits.length - 1; i >= 0; i--) {\n      var e = sortedEdits[i];\n      var startOffset = document.offsetAt(e.range.start);\n      var endOffset = document.offsetAt(e.range.end);\n\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error('Ovelapping edit');\n      }\n\n      lastModifiedOffset = startOffset;\n    }\n\n    return text;\n  }\n\n  TextDocument.applyEdits = applyEdits;\n\n  function mergeSort(data, compare) {\n    if (data.length <= 1) {\n      // sorted\n      return data;\n    }\n\n    var p = data.length / 2 | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n\n    while (leftIdx < left.length && rightIdx < right.length) {\n      var ret = compare(left[leftIdx], right[rightIdx]);\n\n      if (ret <= 0) {\n        // smaller_equal -> take left to preserve order\n        data[i++] = left[leftIdx++];\n      } else {\n        // greater -> take right\n        data[i++] = right[rightIdx++];\n      }\n    }\n\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\n/**\r\n * Represents reasons why a text document is saved.\r\n */\n\n\nexport var TextDocumentSaveReason;\n\n(function (TextDocumentSaveReason) {\n  /**\r\n   * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n   * or by an API call.\r\n   */\n  TextDocumentSaveReason.Manual = 1;\n  /**\r\n   * Automatic after a delay.\r\n   */\n\n  TextDocumentSaveReason.AfterDelay = 2;\n  /**\r\n   * When the editor lost focus.\r\n   */\n\n  TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\n\nvar FullTextDocument =\n/** @class */\nfunction () {\n  function FullTextDocument(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = null;\n  }\n\n  Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n    get: function get() {\n      return this._uri;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n    get: function get() {\n      return this._languageId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"version\", {\n    get: function get() {\n      return this._version;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FullTextDocument.prototype.getText = function (range) {\n    if (range) {\n      var start = this.offsetAt(range.start);\n      var end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n\n    return this._content;\n  };\n\n  FullTextDocument.prototype.update = function (event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = null;\n  };\n\n  FullTextDocument.prototype.getLineOffsets = function () {\n    if (this._lineOffsets === null) {\n      var lineOffsets = [];\n      var text = this._content;\n      var isLineStart = true;\n\n      for (var i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n\n        var ch = text.charAt(i);\n        isLineStart = ch === '\\r' || ch === '\\n';\n\n        if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n          i++;\n        }\n      }\n\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n\n      this._lineOffsets = lineOffsets;\n    }\n\n    return this._lineOffsets;\n  };\n\n  FullTextDocument.prototype.positionAt = function (offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    var lineOffsets = this.getLineOffsets();\n    var low = 0,\n        high = lineOffsets.length;\n\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    } // low is the least x for which the line offset is larger than the current offset\n    // or array.length if no line offset is larger than the current offset\n\n\n    var line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  };\n\n  FullTextDocument.prototype.offsetAt = function (position) {\n    var lineOffsets = this.getLineOffsets();\n\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n\n    var lineOffset = lineOffsets[position.line];\n    var nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  };\n\n  Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n    get: function get() {\n      return this.getLineOffsets().length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FullTextDocument;\n}();\n\nvar Is;\n\n(function (Is) {\n  var toString = Object.prototype.toString;\n\n  function defined(value) {\n    return typeof value !== 'undefined';\n  }\n\n  Is.defined = defined;\n\n  function undefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  Is.undefined = undefined;\n\n  function boolean(value) {\n    return value === true || value === false;\n  }\n\n  Is.boolean = boolean;\n\n  function string(value) {\n    return toString.call(value) === '[object String]';\n  }\n\n  Is.string = string;\n\n  function number(value) {\n    return toString.call(value) === '[object Number]';\n  }\n\n  Is.number = number;\n\n  function func(value) {\n    return toString.call(value) === '[object Function]';\n  }\n\n  Is.func = func;\n\n  function objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n  }\n\n  Is.objectLiteral = objectLiteral;\n\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n\n  Is.typedArray = typedArray;\n})(Is || (Is = {}));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri; // --- diagnostics --- ---\n\nvar DiagnosticsAdapter =\n/** @class */\nfunction () {\n  function DiagnosticsAdapter(_languageId, _worker, defaults) {\n    var _this = this;\n\n    this._languageId = _languageId;\n    this._worker = _worker;\n    this._disposables = [];\n    this._listener = Object.create(null);\n\n    var onModelAdd = function onModelAdd(model) {\n      var modeId = model.getModeId();\n\n      if (modeId !== _this._languageId) {\n        return;\n      }\n\n      var handle;\n      _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n        clearTimeout(handle);\n        handle = setTimeout(function () {\n          return _this._doValidate(model.uri, modeId);\n        }, 500);\n      });\n\n      _this._doValidate(model.uri, modeId);\n    };\n\n    var onModelRemoved = function onModelRemoved(model) {\n      monaco.editor.setModelMarkers(model, _this._languageId, []);\n      var uriStr = model.uri.toString();\n      var listener = _this._listener[uriStr];\n\n      if (listener) {\n        listener.dispose();\n        delete _this._listener[uriStr];\n      }\n    };\n\n    this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n\n    this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n\n    this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n\n    defaults.onDidChange(function (_) {\n      monaco.editor.getModels().forEach(function (model) {\n        if (model.getModeId() === _this._languageId) {\n          onModelRemoved(model);\n          onModelAdd(model);\n        }\n      });\n    });\n\n    this._disposables.push({\n      dispose: function dispose() {\n        for (var key in _this._listener) {\n          _this._listener[key].dispose();\n        }\n      }\n    });\n\n    monaco.editor.getModels().forEach(onModelAdd);\n  }\n\n  DiagnosticsAdapter.prototype.dispose = function () {\n    this._disposables.forEach(function (d) {\n      return d && d.dispose();\n    });\n\n    this._disposables = [];\n  };\n\n  DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n    this._worker(resource).then(function (worker) {\n      return worker.doValidation(resource.toString());\n    }).then(function (diagnostics) {\n      var markers = diagnostics.map(function (d) {\n        return toDiagnostics(resource, d);\n      });\n      var model = monaco.editor.getModel(resource);\n\n      if (model.getModeId() === languageId) {\n        monaco.editor.setModelMarkers(model, languageId, markers);\n      }\n    }).then(undefined, function (err) {\n      console.error(err);\n    });\n  };\n\n  return DiagnosticsAdapter;\n}();\n\nexport { DiagnosticsAdapter };\n\nfunction toSeverity(lsSeverity) {\n  switch (lsSeverity) {\n    case ls.DiagnosticSeverity.Error:\n      return monaco.MarkerSeverity.Error;\n\n    case ls.DiagnosticSeverity.Warning:\n      return monaco.MarkerSeverity.Warning;\n\n    case ls.DiagnosticSeverity.Information:\n      return monaco.MarkerSeverity.Info;\n\n    case ls.DiagnosticSeverity.Hint:\n      return monaco.MarkerSeverity.Hint;\n\n    default:\n      return monaco.MarkerSeverity.Info;\n  }\n}\n\nfunction toDiagnostics(resource, diag) {\n  var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n  return {\n    severity: toSeverity(diag.severity),\n    startLineNumber: diag.range.start.line + 1,\n    startColumn: diag.range.start.character + 1,\n    endLineNumber: diag.range.end.line + 1,\n    endColumn: diag.range.end.character + 1,\n    message: diag.message,\n    code: code,\n    source: diag.source\n  };\n} // --- completion ------\n\n\nfunction fromPosition(position) {\n  if (!position) {\n    return void 0;\n  }\n\n  return {\n    character: position.column - 1,\n    line: position.lineNumber - 1\n  };\n}\n\nfunction fromRange(range) {\n  if (!range) {\n    return void 0;\n  }\n\n  return {\n    start: {\n      line: range.startLineNumber - 1,\n      character: range.startColumn - 1\n    },\n    end: {\n      line: range.endLineNumber - 1,\n      character: range.endColumn - 1\n    }\n  };\n}\n\nfunction toRange(range) {\n  if (!range) {\n    return void 0;\n  }\n\n  return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\n\nfunction toCompletionItemKind(kind) {\n  var mItemKind = monaco.languages.CompletionItemKind;\n\n  switch (kind) {\n    case ls.CompletionItemKind.Text:\n      return mItemKind.Text;\n\n    case ls.CompletionItemKind.Method:\n      return mItemKind.Method;\n\n    case ls.CompletionItemKind.Function:\n      return mItemKind.Function;\n\n    case ls.CompletionItemKind.Constructor:\n      return mItemKind.Constructor;\n\n    case ls.CompletionItemKind.Field:\n      return mItemKind.Field;\n\n    case ls.CompletionItemKind.Variable:\n      return mItemKind.Variable;\n\n    case ls.CompletionItemKind.Class:\n      return mItemKind.Class;\n\n    case ls.CompletionItemKind.Interface:\n      return mItemKind.Interface;\n\n    case ls.CompletionItemKind.Module:\n      return mItemKind.Module;\n\n    case ls.CompletionItemKind.Property:\n      return mItemKind.Property;\n\n    case ls.CompletionItemKind.Unit:\n      return mItemKind.Unit;\n\n    case ls.CompletionItemKind.Value:\n      return mItemKind.Value;\n\n    case ls.CompletionItemKind.Enum:\n      return mItemKind.Enum;\n\n    case ls.CompletionItemKind.Keyword:\n      return mItemKind.Keyword;\n\n    case ls.CompletionItemKind.Snippet:\n      return mItemKind.Snippet;\n\n    case ls.CompletionItemKind.Color:\n      return mItemKind.Color;\n\n    case ls.CompletionItemKind.File:\n      return mItemKind.File;\n\n    case ls.CompletionItemKind.Reference:\n      return mItemKind.Reference;\n  }\n\n  return mItemKind.Property;\n}\n\nfunction toTextEdit(textEdit) {\n  if (!textEdit) {\n    return void 0;\n  }\n\n  return {\n    range: toRange(textEdit.range),\n    text: textEdit.newText\n  };\n}\n\nvar CompletionAdapter =\n/** @class */\nfunction () {\n  function CompletionAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n    get: function get() {\n      return [' ', ':'];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n    var wordInfo = model.getWordUntilPosition(position);\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.doComplete(resource.toString(), fromPosition(position));\n    }).then(function (info) {\n      if (!info) {\n        return;\n      }\n\n      var items = info.items.map(function (entry) {\n        var item = {\n          label: entry.label,\n          insertText: entry.insertText || entry.label,\n          sortText: entry.sortText,\n          filterText: entry.filterText,\n          documentation: entry.documentation,\n          detail: entry.detail,\n          kind: toCompletionItemKind(entry.kind)\n        };\n\n        if (entry.textEdit) {\n          item.range = toRange(entry.textEdit.range);\n          item.insertText = entry.textEdit.newText;\n        }\n\n        if (entry.additionalTextEdits) {\n          item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n        }\n\n        if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n          item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n        }\n\n        return item;\n      });\n      return {\n        isIncomplete: info.isIncomplete,\n        suggestions: items\n      };\n    });\n  };\n\n  return CompletionAdapter;\n}();\n\nexport { CompletionAdapter };\n\nfunction isMarkupContent(thing) {\n  return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\n\nfunction toMarkdownString(entry) {\n  if (typeof entry === 'string') {\n    return {\n      value: entry\n    };\n  }\n\n  if (isMarkupContent(entry)) {\n    if (entry.kind === 'plaintext') {\n      return {\n        value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n      };\n    }\n\n    return {\n      value: entry.value\n    };\n  }\n\n  return {\n    value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n'\n  };\n}\n\nfunction toMarkedStringArray(contents) {\n  if (!contents) {\n    return void 0;\n  }\n\n  if (Array.isArray(contents)) {\n    return contents.map(toMarkdownString);\n  }\n\n  return [toMarkdownString(contents)];\n} // --- hover ------\n\n\nvar HoverAdapter =\n/** @class */\nfunction () {\n  function HoverAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  HoverAdapter.prototype.provideHover = function (model, position, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.doHover(resource.toString(), fromPosition(position));\n    }).then(function (info) {\n      if (!info) {\n        return;\n      }\n\n      return {\n        range: toRange(info.range),\n        contents: toMarkedStringArray(info.contents)\n      };\n    });\n  };\n\n  return HoverAdapter;\n}();\n\nexport { HoverAdapter }; // --- document highlights ------\n\nfunction toDocumentHighlightKind(kind) {\n  switch (kind) {\n    case ls.DocumentHighlightKind.Read:\n      return monaco.languages.DocumentHighlightKind.Read;\n\n    case ls.DocumentHighlightKind.Write:\n      return monaco.languages.DocumentHighlightKind.Write;\n\n    case ls.DocumentHighlightKind.Text:\n      return monaco.languages.DocumentHighlightKind.Text;\n  }\n\n  return monaco.languages.DocumentHighlightKind.Text;\n}\n\nvar DocumentHighlightAdapter =\n/** @class */\nfunction () {\n  function DocumentHighlightAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\n    }).then(function (entries) {\n      if (!entries) {\n        return;\n      }\n\n      return entries.map(function (entry) {\n        return {\n          range: toRange(entry.range),\n          kind: toDocumentHighlightKind(entry.kind)\n        };\n      });\n    });\n  };\n\n  return DocumentHighlightAdapter;\n}();\n\nexport { DocumentHighlightAdapter }; // --- definition ------\n\nfunction toLocation(location) {\n  return {\n    uri: Uri.parse(location.uri),\n    range: toRange(location.range)\n  };\n}\n\nvar DefinitionAdapter =\n/** @class */\nfunction () {\n  function DefinitionAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.findDefinition(resource.toString(), fromPosition(position));\n    }).then(function (definition) {\n      if (!definition) {\n        return;\n      }\n\n      return [toLocation(definition)];\n    });\n  };\n\n  return DefinitionAdapter;\n}();\n\nexport { DefinitionAdapter }; // --- references ------\n\nvar ReferenceAdapter =\n/** @class */\nfunction () {\n  function ReferenceAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.findReferences(resource.toString(), fromPosition(position));\n    }).then(function (entries) {\n      if (!entries) {\n        return;\n      }\n\n      return entries.map(toLocation);\n    });\n  };\n\n  return ReferenceAdapter;\n}();\n\nexport { ReferenceAdapter }; // --- rename ------\n\nfunction toWorkspaceEdit(edit) {\n  if (!edit || !edit.changes) {\n    return void 0;\n  }\n\n  var resourceEdits = [];\n\n  for (var uri in edit.changes) {\n    var edits = [];\n\n    for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\n      var e = _a[_i];\n      edits.push({\n        range: toRange(e.range),\n        text: e.newText\n      });\n    }\n\n    resourceEdits.push({\n      resource: Uri.parse(uri),\n      edits: edits\n    });\n  }\n\n  return {\n    edits: resourceEdits\n  };\n}\n\nvar RenameAdapter =\n/** @class */\nfunction () {\n  function RenameAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.doRename(resource.toString(), fromPosition(position), newName);\n    }).then(function (edit) {\n      return toWorkspaceEdit(edit);\n    });\n  };\n\n  return RenameAdapter;\n}();\n\nexport { RenameAdapter }; // --- document symbols ------\n\nfunction toSymbolKind(kind) {\n  var mKind = monaco.languages.SymbolKind;\n\n  switch (kind) {\n    case ls.SymbolKind.File:\n      return mKind.Array;\n\n    case ls.SymbolKind.Module:\n      return mKind.Module;\n\n    case ls.SymbolKind.Namespace:\n      return mKind.Namespace;\n\n    case ls.SymbolKind.Package:\n      return mKind.Package;\n\n    case ls.SymbolKind.Class:\n      return mKind.Class;\n\n    case ls.SymbolKind.Method:\n      return mKind.Method;\n\n    case ls.SymbolKind.Property:\n      return mKind.Property;\n\n    case ls.SymbolKind.Field:\n      return mKind.Field;\n\n    case ls.SymbolKind.Constructor:\n      return mKind.Constructor;\n\n    case ls.SymbolKind.Enum:\n      return mKind.Enum;\n\n    case ls.SymbolKind.Interface:\n      return mKind.Interface;\n\n    case ls.SymbolKind.Function:\n      return mKind.Function;\n\n    case ls.SymbolKind.Variable:\n      return mKind.Variable;\n\n    case ls.SymbolKind.Constant:\n      return mKind.Constant;\n\n    case ls.SymbolKind.String:\n      return mKind.String;\n\n    case ls.SymbolKind.Number:\n      return mKind.Number;\n\n    case ls.SymbolKind.Boolean:\n      return mKind.Boolean;\n\n    case ls.SymbolKind.Array:\n      return mKind.Array;\n  }\n\n  return mKind.Function;\n}\n\nvar DocumentSymbolAdapter =\n/** @class */\nfunction () {\n  function DocumentSymbolAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.findDocumentSymbols(resource.toString());\n    }).then(function (items) {\n      if (!items) {\n        return;\n      }\n\n      return items.map(function (item) {\n        return {\n          name: item.name,\n          detail: '',\n          containerName: item.containerName,\n          kind: toSymbolKind(item.kind),\n          range: toRange(item.location.range),\n          selectionRange: toRange(item.location.range)\n        };\n      });\n    });\n  };\n\n  return DocumentSymbolAdapter;\n}();\n\nexport { DocumentSymbolAdapter };\n\nvar DocumentColorAdapter =\n/** @class */\nfunction () {\n  function DocumentColorAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.findDocumentColors(resource.toString());\n    }).then(function (infos) {\n      if (!infos) {\n        return;\n      }\n\n      return infos.map(function (item) {\n        return {\n          color: item.color,\n          range: toRange(item.range)\n        };\n      });\n    });\n  };\n\n  DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range));\n    }).then(function (presentations) {\n      if (!presentations) {\n        return;\n      }\n\n      return presentations.map(function (presentation) {\n        var item = {\n          label: presentation.label\n        };\n\n        if (presentation.textEdit) {\n          item.textEdit = toTextEdit(presentation.textEdit);\n        }\n\n        if (presentation.additionalTextEdits) {\n          item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n        }\n\n        return item;\n      });\n    });\n  };\n\n  return DocumentColorAdapter;\n}();\n\nexport { DocumentColorAdapter };\n\nvar FoldingRangeAdapter =\n/** @class */\nfunction () {\n  function FoldingRangeAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n    var resource = model.uri;\n    return this._worker(resource).then(function (worker) {\n      return worker.provideFoldingRanges(resource.toString(), context);\n    }).then(function (ranges) {\n      if (!ranges) {\n        return;\n      }\n\n      return ranges.map(function (range) {\n        var result = {\n          start: range.startLine + 1,\n          end: range.endLine + 1\n        };\n\n        if (typeof range.kind !== 'undefined') {\n          result.kind = toFoldingRangeKind(range.kind);\n        }\n\n        return result;\n      });\n    });\n  };\n\n  return FoldingRangeAdapter;\n}();\n\nexport { FoldingRangeAdapter };\n\nfunction toFoldingRangeKind(kind) {\n  switch (kind) {\n    case ls.FoldingRangeKind.Comment:\n      return monaco.languages.FoldingRangeKind.Comment;\n\n    case ls.FoldingRangeKind.Imports:\n      return monaco.languages.FoldingRangeKind.Imports;\n\n    case ls.FoldingRangeKind.Region:\n      return monaco.languages.FoldingRangeKind.Region;\n  }\n\n  return void 0;\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n  var client = new WorkerManager(defaults);\n\n  var worker = function worker(first) {\n    var more = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      more[_i - 1] = arguments[_i];\n    }\n\n    return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n  };\n\n  var languageId = defaults.languageId;\n  monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n  monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n  monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n  monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\n  monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\n  monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n  monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\n  monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\n  monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n  new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n}"],"sourceRoot":""}